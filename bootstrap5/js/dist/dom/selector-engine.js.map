{"version":3,"file":"selector-engine.js","sources":["../../src/dom/selector-engine.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NODE_TEXT = 3\n\nconst SelectorEngine = {\n  find(selector, element = document.documentElement) {\n    return [].concat(...Element.prototype.querySelectorAll.call(element, selector))\n  },\n\n  findOne(selector, element = document.documentElement) {\n    return Element.prototype.querySelector.call(element, selector)\n  },\n\n  children(element, selector) {\n    return [].concat(...element.children)\n      .filter(child => child.matches(selector))\n  },\n\n  parents(element, selector) {\n    const parents = []\n\n    let ancestor = element.parentNode\n\n    while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE && ancestor.nodeType !== NODE_TEXT) {\n      if (ancestor.matches(selector)) {\n        parents.push(ancestor)\n      }\n\n      ancestor = ancestor.parentNode\n    }\n\n    return parents\n  },\n\n  prev(element, selector) {\n    let previous = element.previousElementSibling\n\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous]\n      }\n\n      previous = previous.previousElementSibling\n    }\n\n    return []\n  },\n\n  next(element, selector) {\n    let next = element.nextElementSibling\n\n    while (next) {\n      if (next.matches(selector)) {\n        return [next]\n      }\n\n      next = next.nextElementSibling\n    }\n\n    return []\n  }\n}\n\nexport default SelectorEngine\n"],"names":["NODE_TEXT","SelectorEngine","find","selector","element","document","documentElement","concat","Element","prototype","querySelectorAll","call","findOne","querySelector","children","filter","child","matches","parents","ancestor","parentNode","nodeType","Node","ELEMENT_NODE","push","prev","previous","previousElementSibling","next","nextElementSibling"],"mappings":";;;;;;;;;;;EAAA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,MAAMA,SAAS,GAAG,CAAC,CAAA;AAEnB,QAAMC,cAAc,GAAG;IACrBC,IAAIA,CAACC,QAAQ,EAAEC,OAAO,GAAGC,QAAQ,CAACC,eAAe,EAAE;EACjD,IAAA,OAAO,EAAE,CAACC,MAAM,CAAC,GAAGC,OAAO,CAACC,SAAS,CAACC,gBAAgB,CAACC,IAAI,CAACP,OAAO,EAAED,QAAQ,CAAC,CAAC,CAAA;KAChF;IAEDS,OAAOA,CAACT,QAAQ,EAAEC,OAAO,GAAGC,QAAQ,CAACC,eAAe,EAAE;MACpD,OAAOE,OAAO,CAACC,SAAS,CAACI,aAAa,CAACF,IAAI,CAACP,OAAO,EAAED,QAAQ,CAAC,CAAA;KAC/D;EAEDW,EAAAA,QAAQA,CAACV,OAAO,EAAED,QAAQ,EAAE;MAC1B,OAAO,EAAE,CAACI,MAAM,CAAC,GAAGH,OAAO,CAACU,QAAQ,CAAC,CAClCC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,OAAO,CAACd,QAAQ,CAAC,CAAC,CAAA;KAC5C;EAEDe,EAAAA,OAAOA,CAACd,OAAO,EAAED,QAAQ,EAAE;MACzB,MAAMe,OAAO,GAAG,EAAE,CAAA;EAElB,IAAA,IAAIC,QAAQ,GAAGf,OAAO,CAACgB,UAAU,CAAA;EAEjC,IAAA,OAAOD,QAAQ,IAAIA,QAAQ,CAACE,QAAQ,KAAKC,IAAI,CAACC,YAAY,IAAIJ,QAAQ,CAACE,QAAQ,KAAKrB,SAAS,EAAE;EAC7F,MAAA,IAAImB,QAAQ,CAACF,OAAO,CAACd,QAAQ,CAAC,EAAE;EAC9Be,QAAAA,OAAO,CAACM,IAAI,CAACL,QAAQ,CAAC,CAAA;EACxB,OAAA;QAEAA,QAAQ,GAAGA,QAAQ,CAACC,UAAU,CAAA;EAChC,KAAA;EAEA,IAAA,OAAOF,OAAO,CAAA;KACf;EAEDO,EAAAA,IAAIA,CAACrB,OAAO,EAAED,QAAQ,EAAE;EACtB,IAAA,IAAIuB,QAAQ,GAAGtB,OAAO,CAACuB,sBAAsB,CAAA;EAE7C,IAAA,OAAOD,QAAQ,EAAE;EACf,MAAA,IAAIA,QAAQ,CAACT,OAAO,CAACd,QAAQ,CAAC,EAAE;UAC9B,OAAO,CAACuB,QAAQ,CAAC,CAAA;EACnB,OAAA;QAEAA,QAAQ,GAAGA,QAAQ,CAACC,sBAAsB,CAAA;EAC5C,KAAA;EAEA,IAAA,OAAO,EAAE,CAAA;KACV;EAEDC,EAAAA,IAAIA,CAACxB,OAAO,EAAED,QAAQ,EAAE;EACtB,IAAA,IAAIyB,IAAI,GAAGxB,OAAO,CAACyB,kBAAkB,CAAA;EAErC,IAAA,OAAOD,IAAI,EAAE;EACX,MAAA,IAAIA,IAAI,CAACX,OAAO,CAACd,QAAQ,CAAC,EAAE;UAC1B,OAAO,CAACyB,IAAI,CAAC,CAAA;EACf,OAAA;QAEAA,IAAI,GAAGA,IAAI,CAACC,kBAAkB,CAAA;EAChC,KAAA;EAEA,IAAA,OAAO,EAAE,CAAA;EACX,GAAA;EACF;;;;;;;;"}